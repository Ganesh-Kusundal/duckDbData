[tool:pytest]
testpaths = tests
python_files = test_*.py
python_classes = Test*
python_functions = test_*
addopts =
    --strict-markers
    --disable-warnings
    --tb=short
    -ra
    --cov=src
    --cov-report=term-missing
    --cov-report=html:htmlcov
    --cov-fail-under=70
markers =
    # Test categories
    unit: Unit tests (fast, isolated)
    integration: Integration tests (medium speed, component interaction)
    e2e: End-to-end tests (slow, complete workflows)
    performance: Performance tests (load and stress testing)
    functional: Functional tests (feature and workflow testing)
    regression: Regression tests (bug fixes and feature stability)
    smoke: Smoke tests (basic health checks)

    # Test layers
    domain: Domain layer tests
    application: Application layer tests
    infrastructure: Infrastructure layer tests
    presentation: Presentation layer tests

    # Test characteristics
    slow: Slow running tests (>1 second)
    fast: Fast running tests (<100ms)
    flaky: Tests that may fail intermittently

    # Test purposes
    critical: Critical functionality tests
    optional: Optional functionality tests
    experimental: Experimental feature tests

filterwarnings =
    ignore::DeprecationWarning
    ignore::PendingDeprecationWarning
    ignore::UserWarning
    ignore::FutureWarning

# Coverage configuration
[coverage:run]
source = src
omit =
    */tests/*
    */test_*
    */conftest.py
    */__pycache__/*
    .tox/*
    .venv/*
    venv/*
    env/*

[coverage:report]
exclude_lines =
    pragma: no cover
    def __repr__
    if self.debug:
    if settings.DEBUG
    raise AssertionError
    raise NotImplementedError
    if 0:
    if __name__ == .__main__.:
    class .*\bProtocol\):
    @(abc\.)?abstractmethod

[coverage:html]
directory = htmlcov

# Test results output
junit_family = xunit2
junit_logging = all
